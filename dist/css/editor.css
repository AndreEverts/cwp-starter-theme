.alert {
  padding: 15px;
  margin-bottom: 20px;
  border: 1px solid transparent;
  border-radius: 4px;
}

.alert h4 {
  margin-top: 0;
  color: inherit;
}

.alert .alert-link {
  font-weight: bold;
}

.alert > p,
.alert > ul {
  margin-bottom: 0;
}

.alert > p + p {
  margin-top: 5px;
}

.alert-dismissable,
.alert-dismissible {
  padding-right: 35px;
}

.alert-dismissable .close,
.alert-dismissible .close {
  position: relative;
  top: -2px;
  right: -21px;
  color: inherit;
}

.alert-success {
  background-color: #dff0d8;
  border-color: #d6e9c6;
  color: #3c763d;
}

.alert-success hr {
  border-top-color: #c9e2b3;
}

.alert-success .alert-link {
  color: #2b542c;
}

.alert-info {
  background-color: #d9edf7;
  border-color: #bce8f1;
  color: #31708f;
}

.alert-info hr {
  border-top-color: #a6e1ec;
}

.alert-info .alert-link {
  color: #245269;
}

.alert-warning {
  background-color: #fcf8e3;
  border-color: #faebcc;
  color: #8a6d3b;
}

.alert-warning hr {
  border-top-color: #f7e1b5;
}

.alert-warning .alert-link {
  color: #66512c;
}

.alert-danger {
  background-color: #f2dede;
  border-color: #ebccd1;
  color: #a94442;
}

.alert-danger hr {
  border-top-color: #e4b9c0;
}

.alert-danger .alert-link {
  color: #843534;
}

table {
  background-color: transparent;
}

caption {
  padding-top: 8px;
  padding-bottom: 8px;
  color: #777777;
  text-align: left;
}

th {
  text-align: left;
}

.table,
table {
  width: 100%;
  max-width: 100%;
  margin-bottom: 20px;
}

.table > thead > tr > th,
table > thead > tr > th,
.table > thead > tr > td,
table > thead > tr > td,
.table > tbody > tr > th,
table > tbody > tr > th,
.table > tbody > tr > td,
table > tbody > tr > td,
.table > tfoot > tr > th,
table > tfoot > tr > th,
.table > tfoot > tr > td,
table > tfoot > tr > td {
  padding: 8px;
  line-height: 1.42857143;
  vertical-align: top;
  border-top: 1px solid #ddd;
}

.table > thead > tr > th,
table > thead > tr > th {
  vertical-align: bottom;
  border-bottom: 2px solid #ddd;
}

.table > caption + thead > tr:first-child > th,
table > caption + thead > tr:first-child > th,
.table > caption + thead > tr:first-child > td,
table > caption + thead > tr:first-child > td,
.table > colgroup + thead > tr:first-child > th,
table > colgroup + thead > tr:first-child > th,
.table > colgroup + thead > tr:first-child > td,
table > colgroup + thead > tr:first-child > td,
.table > thead:first-child > tr:first-child > th,
table > thead:first-child > tr:first-child > th,
.table > thead:first-child > tr:first-child > td,
table > thead:first-child > tr:first-child > td {
  border-top: 0;
}

.table > tbody + tbody,
table > tbody + tbody {
  border-top: 2px solid #ddd;
}

.table .table,
table .table,
.table table,
table table {
  background-color: #fff;
}

.table-condensed > thead > tr > th,
.table-condensed > thead > tr > td,
.table-condensed > tbody > tr > th,
.table-condensed > tbody > tr > td,
.table-condensed > tfoot > tr > th,
.table-condensed > tfoot > tr > td {
  padding: 5px;
}

.table-bordered {
  border: 1px solid #ddd;
}

.table-bordered > thead > tr > th,
.table-bordered > thead > tr > td,
.table-bordered > tbody > tr > th,
.table-bordered > tbody > tr > td,
.table-bordered > tfoot > tr > th,
.table-bordered > tfoot > tr > td {
  border: 1px solid #ddd;
}

.table-bordered > thead > tr > th,
.table-bordered > thead > tr > td {
  border-bottom-width: 2px;
}

.table-striped > tbody > tr:nth-of-type(odd) {
  background-color: #f9f9f9;
}

.table-hover > tbody > tr:hover {
  background-color: #f5f5f5;
}

table col[class*="col-"] {
  position: static;
  float: none;
  display: table-column;
}

table td[class*="col-"],
table th[class*="col-"] {
  position: static;
  float: none;
  display: table-cell;
}

.table > thead > tr > td.active,
table > thead > tr > td.active,
.table > thead > tr > th.active,
table > thead > tr > th.active,
.table > thead > tr.active > td,
table > thead > tr.active > td,
.table > thead > tr.active > th,
table > thead > tr.active > th,
.table > tbody > tr > td.active,
table > tbody > tr > td.active,
.table > tbody > tr > th.active,
table > tbody > tr > th.active,
.table > tbody > tr.active > td,
table > tbody > tr.active > td,
.table > tbody > tr.active > th,
table > tbody > tr.active > th,
.table > tfoot > tr > td.active,
table > tfoot > tr > td.active,
.table > tfoot > tr > th.active,
table > tfoot > tr > th.active,
.table > tfoot > tr.active > td,
table > tfoot > tr.active > td,
.table > tfoot > tr.active > th,
table > tfoot > tr.active > th {
  background-color: #f5f5f5;
}

.table-hover > tbody > tr > td.active:hover,
.table-hover > tbody > tr > th.active:hover,
.table-hover > tbody > tr.active:hover > td,
.table-hover > tbody > tr:hover > .active,
.table-hover > tbody > tr.active:hover > th {
  background-color: #e8e8e8;
}

.table > thead > tr > td.success,
table > thead > tr > td.success,
.table > thead > tr > th.success,
table > thead > tr > th.success,
.table > thead > tr.success > td,
table > thead > tr.success > td,
.table > thead > tr.success > th,
table > thead > tr.success > th,
.table > tbody > tr > td.success,
table > tbody > tr > td.success,
.table > tbody > tr > th.success,
table > tbody > tr > th.success,
.table > tbody > tr.success > td,
table > tbody > tr.success > td,
.table > tbody > tr.success > th,
table > tbody > tr.success > th,
.table > tfoot > tr > td.success,
table > tfoot > tr > td.success,
.table > tfoot > tr > th.success,
table > tfoot > tr > th.success,
.table > tfoot > tr.success > td,
table > tfoot > tr.success > td,
.table > tfoot > tr.success > th,
table > tfoot > tr.success > th {
  background-color: #dff0d8;
}

.table-hover > tbody > tr > td.success:hover,
.table-hover > tbody > tr > th.success:hover,
.table-hover > tbody > tr.success:hover > td,
.table-hover > tbody > tr:hover > .success,
.table-hover > tbody > tr.success:hover > th {
  background-color: #d0e9c6;
}

.table > thead > tr > td.info,
table > thead > tr > td.info,
.table > thead > tr > th.info,
table > thead > tr > th.info,
.table > thead > tr.info > td,
table > thead > tr.info > td,
.table > thead > tr.info > th,
table > thead > tr.info > th,
.table > tbody > tr > td.info,
table > tbody > tr > td.info,
.table > tbody > tr > th.info,
table > tbody > tr > th.info,
.table > tbody > tr.info > td,
table > tbody > tr.info > td,
.table > tbody > tr.info > th,
table > tbody > tr.info > th,
.table > tfoot > tr > td.info,
table > tfoot > tr > td.info,
.table > tfoot > tr > th.info,
table > tfoot > tr > th.info,
.table > tfoot > tr.info > td,
table > tfoot > tr.info > td,
.table > tfoot > tr.info > th,
table > tfoot > tr.info > th {
  background-color: #d9edf7;
}

.table-hover > tbody > tr > td.info:hover,
.table-hover > tbody > tr > th.info:hover,
.table-hover > tbody > tr.info:hover > td,
.table-hover > tbody > tr:hover > .info,
.table-hover > tbody > tr.info:hover > th {
  background-color: #c4e3f3;
}

.table > thead > tr > td.warning,
table > thead > tr > td.warning,
.table > thead > tr > th.warning,
table > thead > tr > th.warning,
.table > thead > tr.warning > td,
table > thead > tr.warning > td,
.table > thead > tr.warning > th,
table > thead > tr.warning > th,
.table > tbody > tr > td.warning,
table > tbody > tr > td.warning,
.table > tbody > tr > th.warning,
table > tbody > tr > th.warning,
.table > tbody > tr.warning > td,
table > tbody > tr.warning > td,
.table > tbody > tr.warning > th,
table > tbody > tr.warning > th,
.table > tfoot > tr > td.warning,
table > tfoot > tr > td.warning,
.table > tfoot > tr > th.warning,
table > tfoot > tr > th.warning,
.table > tfoot > tr.warning > td,
table > tfoot > tr.warning > td,
.table > tfoot > tr.warning > th,
table > tfoot > tr.warning > th {
  background-color: #fcf8e3;
}

.table-hover > tbody > tr > td.warning:hover,
.table-hover > tbody > tr > th.warning:hover,
.table-hover > tbody > tr.warning:hover > td,
.table-hover > tbody > tr:hover > .warning,
.table-hover > tbody > tr.warning:hover > th {
  background-color: #faf2cc;
}

.table > thead > tr > td.danger,
table > thead > tr > td.danger,
.table > thead > tr > th.danger,
table > thead > tr > th.danger,
.table > thead > tr.danger > td,
table > thead > tr.danger > td,
.table > thead > tr.danger > th,
table > thead > tr.danger > th,
.table > tbody > tr > td.danger,
table > tbody > tr > td.danger,
.table > tbody > tr > th.danger,
table > tbody > tr > th.danger,
.table > tbody > tr.danger > td,
table > tbody > tr.danger > td,
.table > tbody > tr.danger > th,
table > tbody > tr.danger > th,
.table > tfoot > tr > td.danger,
table > tfoot > tr > td.danger,
.table > tfoot > tr > th.danger,
table > tfoot > tr > th.danger,
.table > tfoot > tr.danger > td,
table > tfoot > tr.danger > td,
.table > tfoot > tr.danger > th,
table > tfoot > tr.danger > th {
  background-color: #f2dede;
}

.table-hover > tbody > tr > td.danger:hover,
.table-hover > tbody > tr > th.danger:hover,
.table-hover > tbody > tr.danger:hover > td,
.table-hover > tbody > tr:hover > .danger,
.table-hover > tbody > tr.danger:hover > th {
  background-color: #ebcccc;
}

.table-responsive {
  overflow-x: auto;
  min-height: 0.01%;
}

@media screen and (max-width: 767px) {
  .table-responsive {
    width: 100%;
    margin-bottom: 15px;
    overflow-y: hidden;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    border: 1px solid #ddd;
  }

  .table-responsive > .table,
  .table-responsive > table {
    margin-bottom: 0;
  }

  .table-responsive > .table > thead > tr > th,
  .table-responsive > table > thead > tr > th,
  .table-responsive > .table > thead > tr > td,
  .table-responsive > table > thead > tr > td,
  .table-responsive > .table > tbody > tr > th,
  .table-responsive > table > tbody > tr > th,
  .table-responsive > .table > tbody > tr > td,
  .table-responsive > table > tbody > tr > td,
  .table-responsive > .table > tfoot > tr > th,
  .table-responsive > table > tfoot > tr > th,
  .table-responsive > .table > tfoot > tr > td,
  .table-responsive > table > tfoot > tr > td {
    white-space: nowrap;
  }

  .table-responsive > .table-bordered {
    border: 0;
  }

  .table-responsive > .table-bordered > thead > tr > th:first-child,
  .table-responsive > .table-bordered > thead > tr > td:first-child,
  .table-responsive > .table-bordered > tbody > tr > th:first-child,
  .table-responsive > .table-bordered > tbody > tr > td:first-child,
  .table-responsive > .table-bordered > tfoot > tr > th:first-child,
  .table-responsive > .table-bordered > tfoot > tr > td:first-child {
    border-left: 0;
  }

  .table-responsive > .table-bordered > thead > tr > th:last-child,
  .table-responsive > .table-bordered > thead > tr > td:last-child,
  .table-responsive > .table-bordered > tbody > tr > th:last-child,
  .table-responsive > .table-bordered > tbody > tr > td:last-child,
  .table-responsive > .table-bordered > tfoot > tr > th:last-child,
  .table-responsive > .table-bordered > tfoot > tr > td:last-child {
    border-right: 0;
  }

  .table-responsive > .table-bordered > tbody > tr:last-child > th,
  .table-responsive > .table-bordered > tbody > tr:last-child > td,
  .table-responsive > .table-bordered > tfoot > tr:last-child > th,
  .table-responsive > .table-bordered > tfoot > tr:last-child > td {
    border-bottom: 0;
  }
}

.media {
  margin-top: 15px;
}

.media:first-child {
  margin-top: 0;
}

.media,
.media-body {
  zoom: 1;
  overflow: hidden;
}

.media-body {
  width: 10000px;
}

.media-object {
  display: block;
}

.media-object.img-thumbnail {
  max-width: none;
}

.media-right,
.media > .pull-right,
.media > .right {
  padding-left: 10px;
}

.media-left,
.media > .pull-left,
.media > .left {
  padding-right: 10px;
}

.media-left,
.media-right,
.media-body {
  display: table-cell;
  vertical-align: top;
}

.media-middle {
  vertical-align: middle;
}

.media-bottom {
  vertical-align: bottom;
}

.media-heading {
  margin-top: 0;
  margin-bottom: 5px;
}

.media-list {
  padding-left: 0;
  list-style: none;
}

h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-family: inherit;
  font-weight: 500;
  line-height: 1.1;
  color: inherit;
}

h1 small,
h1 .small,
h2 small,
h2 .small,
h3 small,
h3 .small,
h4 small,
h4 .small,
h5 small,
h5 .small,
h6 small,
h6 .small,
.h1 small,
.h1 .small,
.h2 small,
.h2 .small,
.h3 small,
.h3 .small,
.h4 small,
.h4 .small,
.h5 small,
.h5 .small,
.h6 small,
.h6 .small {
  font-weight: normal;
  line-height: 1;
  color: #777777;
}

h1,
.h1,
h2,
.h2,
h3,
.h3 {
  margin-top: 20px;
  margin-bottom: 10px;
}

h1 small,
h1 .small,
.h1 small,
.h1 .small,
h2 small,
h2 .small,
.h2 small,
.h2 .small,
h3 small,
h3 .small,
.h3 small,
.h3 .small {
  font-size: 65%;
}

h4,
.h4,
h5,
.h5,
h6,
.h6 {
  margin-top: 10px;
  margin-bottom: 10px;
}

h4 small,
h4 .small,
.h4 small,
.h4 .small,
h5 small,
h5 .small,
.h5 small,
.h5 .small,
h6 small,
h6 .small,
.h6 small,
.h6 .small {
  font-size: 75%;
}

h1,
.h1 {
  font-size: 36px;
}

h2,
.h2 {
  font-size: 30px;
}

h3,
.h3 {
  font-size: 24px;
}

h4,
.h4 {
  font-size: 18px;
}

h5,
.h5 {
  font-size: 14px;
}

h6,
.h6 {
  font-size: 12px;
}

p {
  margin: 0 0 10px;
}

.lead {
  margin-bottom: 20px;
  font-size: 16px;
  font-weight: 300;
  line-height: 1.4;
}

@media (min-width: 768px) {
  .lead {
    font-size: 21px;
  }
}

small,
.small {
  font-size: 85%;
}

mark,
.mark {
  background-color: #fcf8e3;
  padding: .2em;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

.text-nowrap {
  white-space: nowrap;
}

.text-lowercase {
  text-transform: lowercase;
}

.text-uppercase,
.initialism {
  text-transform: uppercase;
}

.text-capitalize {
  text-transform: capitalize;
}

.text-muted {
  color: #777777;
}

.text-primary {
  color: #337ab7;
}

a.text-primary:hover,
a.text-primary:focus {
  color: #286090;
}

.text-success {
  color: #3c763d;
}

a.text-success:hover,
a.text-success:focus {
  color: #2b542c;
}

.text-info {
  color: #31708f;
}

a.text-info:hover,
a.text-info:focus {
  color: #245269;
}

.text-warning {
  color: #8a6d3b;
}

a.text-warning:hover,
a.text-warning:focus {
  color: #66512c;
}

.text-danger {
  color: #a94442;
}

a.text-danger:hover,
a.text-danger:focus {
  color: #843534;
}

.bg-primary {
  color: #fff;
}

.bg-primary {
  background-color: #337ab7;
}

a.bg-primary:hover,
a.bg-primary:focus {
  background-color: #286090;
}

.bg-success {
  background-color: #dff0d8;
}

a.bg-success:hover,
a.bg-success:focus {
  background-color: #c1e2b3;
}

.bg-info {
  background-color: #d9edf7;
}

a.bg-info:hover,
a.bg-info:focus {
  background-color: #afd9ee;
}

.bg-warning {
  background-color: #fcf8e3;
}

a.bg-warning:hover,
a.bg-warning:focus {
  background-color: #f7ecb5;
}

.bg-danger {
  background-color: #f2dede;
}

a.bg-danger:hover,
a.bg-danger:focus {
  background-color: #e4b9b9;
}

.page-header {
  padding-bottom: 9px;
  margin: 40px 0 20px;
  border-bottom: 1px solid #eeeeee;
}

ul,
ol {
  margin-top: 0;
  margin-bottom: 10px;
}

ul ul,
ul ol,
ol ul,
ol ol {
  margin-bottom: 0;
}

.list-unstyled {
  padding-left: 0;
  list-style: none;
}

.list-inline {
  padding-left: 0;
  list-style: none;
  margin-left: -5px;
}

.list-inline > li {
  display: inline-block;
  padding-left: 5px;
  padding-right: 5px;
}

dl {
  margin-top: 0;
  margin-bottom: 20px;
}

dt,
dd {
  line-height: 1.42857143;
}

dt {
  font-weight: bold;
}

dd {
  margin-left: 0;
}

.dl-horizontal dd:before,
.dl-horizontal dd:after {
  content: " ";
  display: table;
}

.dl-horizontal dd:after {
  clear: both;
}

@media (min-width: 768px) {
  .dl-horizontal dt {
    float: left;
    width: 160px;
    clear: left;
    text-align: right;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .dl-horizontal dd {
    margin-left: 180px;
  }
}

abbr[title],
abbr[data-original-title] {
  cursor: help;
  border-bottom: 1px dotted #777777;
}

.initialism {
  font-size: 90%;
}

blockquote {
  padding: 10px 20px;
  margin: 0 0 20px;
  font-size: 17.5px;
  border-left: 5px solid #eeeeee;
}

blockquote p:last-child,
blockquote ul:last-child,
blockquote ol:last-child {
  margin-bottom: 0;
}

blockquote footer,
blockquote small,
blockquote .small {
  display: block;
  font-size: 80%;
  line-height: 1.42857143;
  color: #777777;
}

blockquote footer:before,
blockquote small:before,
blockquote .small:before {
  content: '\2014   \A0';
}

.blockquote-reverse,
blockquote.pull-right,
blockquote.right {
  padding-right: 15px;
  padding-left: 0;
  border-right: 5px solid #eeeeee;
  border-left: 0;
  text-align: right;
}

.blockquote-reverse footer:before,
.blockquote-reverse small:before,
.blockquote-reverse .small:before,
blockquote.pull-right footer:before,
blockquote.right footer:before,
blockquote.pull-right small:before,
blockquote.right small:before,
blockquote.pull-right .small:before,
blockquote.right .small:before {
  content: '';
}

.blockquote-reverse footer:after,
.blockquote-reverse small:after,
.blockquote-reverse .small:after,
blockquote.pull-right footer:after,
blockquote.right footer:after,
blockquote.pull-right small:after,
blockquote.right small:after,
blockquote.pull-right .small:after,
blockquote.right .small:after {
  content: '\A0   \2014';
}

address {
  margin-bottom: 20px;
  font-style: normal;
  line-height: 1.42857143;
}

.clearfix:before,
.clearfix:after {
  content: " ";
  display: table;
}

.clearfix:after {
  clear: both;
}

.center-block,
.center {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.pull-right,
.right {
  float: right !important;
}

.pull-left,
.left {
  float: left !important;
}

.hide {
  display: none !important;
}

.show {
  display: block !important;
}

.invisible {
  visibility: hidden;
}

.text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

.hidden {
  display: none !important;
}

.affix {
  position: fixed;
}

.typography {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 14px;
  line-height: 1.42857143;
}

p {
  margin-bottom: 10px;
  font-size: 14px;
  line-height: 1.42857143;
}

img,
figure {
  max-width: 100%;
  height: auto;
}

img.right,
figure.right {
  float: right;
  clear: right;
  margin: 0 0 18px 18px;
}

img.left,
figure.left {
  float: left;
  clear: left;
  margin: 0 18px 18px 0px;
}

img.leftAlone,
figure.leftAlone {
  margin: 0 18px 18px 0;
  display: block;
  clear: both;
}

img.center,
figure.center {
  margin-bottom: 18px;
  clear: both;
}

.captionImage {
  width: 100%;
  max-width: 100%;
}

.captionImage.pull-left,
.captionImage.left {
  margin: 0 18px 18px 0px;
}

.captionImage.pull-right,
.captionImage.right {
  margin: 0 0 18px 18px;
}

.captionImage.leftAlone {
  margin: 0 18px 18px 0px;
}

.captionImage.center-block,
.captionImage.center {
  margin-bottom: 18px;
}

.captionImage p {
  clear: both;
  margin: 8px 0;
  color: #444;
}

.captionImage img {
  margin: 0 0 5px 0;
}

table {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}

table caption {
  text-align: left;
  padding: 4px 0;
}

table thead,
table tfoot {
  font-weight: 700;
}

.table-striped tbody tr:hover td,
.table-striped tbody tr:hover th,
.table-bordered-striped tbody tr:hover td,
.table-bordered-striped tbody tr:hover th {
  background-color: #f5f5f5;
}

a.external {
  display: inline-block;
}

a.external::after {
  content: "\F08E";
  font-size: 12px;
  font-family: FontAwesome;
  position: relative;
  top: -3px;
}

a[href$=".doc"]::before,
a[href$=".DOC"]::before,
a[href$=".docx"]::before,
a[href$=".DOCX"]::before,
.doc::before {
  margin-right: 5px;
  content: "\F016";
  font-family: FontAwesome;
}

a[href$=".xls"]::before,
a[href$=".XLS"]::before,
a[href$=".xlsx"]::before,
a[href$=".XLSX"]::before,
.xls::before {
  margin-right: 5px;
  content: "\F1C3";
  font-family: FontAwesome;
}

a[href$=".gz"]::before,
a[href$=".GZ"]::before,
a[href$=".gzip"]::before,
a[href$=".GZIP"]::before,
a[href$=".zip"]::before,
a[href$=".ZIP"]::before,
.archive::before {
  margin-right: 5px;
  content: "\F1C6";
  font-family: FontAwesome;
}

a[href$=".exe"]::before,
a[href$=".EXE"]::before,
.application::before {
  margin-right: 5px;
  content: "\F022";
  font-family: FontAwesome;
}

a[href$=".pdf"]::before,
a[href$=".PDF"]::before,
.pdf::before {
  margin-right: 5px;
  content: "\F1C1";
  font-family: FontAwesome;
}

.blockquote-footer {
  display: block;
  font-size: 80%;
  line-height: 1.42857143;
  color: #767676;
}

.blockquote-footer::before {
  content: '\2014   \A0';
}

pre {
  padding: 9.5px;
  margin: 0 0 10px;
  word-break: break-all;
  word-wrap: break-word;
  background-color: #f5f5f5;
  border: 1px solid #ccc;
  border-radius: 4px;
  white-space: pre-wrap;
}

body.mceContentBody a.ss-broken {
  background-color: red;
  border: 1px red solid;
  color: #fff;
  padding: 1px;
  text-decoration: underline;
}

/*# sourceMappingURL=editor.css.map */

.blockquote-footer {
  background-color: #eee;
}

.maori {
  background-color: #fae5e8 !important;
}

.text-hide {
  font: 14px/20px sans-serif;
  color: black;
  outline: 1px dotted #767676;
}

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;base64, */
=======
<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;base64, */
=======
/*# sourceMappingURL=data:application/json;base64, */
>>>>>>> CWPT-263_news_events_classes
>>>>>>> CWPT-263_news_events_classes
